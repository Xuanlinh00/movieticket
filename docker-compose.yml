

services:
  # MongoDB service
  mongo:
    image: mongo:7.0
    container_name: minicinema_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: minicinema123
      MONGO_INITDB_DATABASE: movie
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - minicinema_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3


  # Redis service (for caching)
  redis:
    image: redis:7-alpine
    container_name: minicinema_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - minicinema_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3


  # NaCinema application
  app:
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    container_name: minicinema_app
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=development
<<<<<<< HEAD
      - MONGODB_URI=mongodb+srv://admin:xYwxTxZboPPKnqnu@cluster0.rt1k6hn.mongodb.net/cinemabook
=======
      - MONGODB_URI=mongodb://admin:minicinema123@mongo:27017/movie?authSource=admin
>>>>>>> bd97d2dcd87743cb25cac9522dd215e630b37313
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-secret-key-change-this-in-production
      - PORT=5000
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads:rw
      - app_logs:/app/logs
    networks:
<<<<<<< HEAD
      - minicinema_network
=======
      - nacinema_network
>>>>>>> bd97d2dcd87743cb25cac9522dd215e630b37313
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M


  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: minicinema_nginx
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - minicinema_network


volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local


networks:
<<<<<<< HEAD
  minicinema_network:
    driver: bridge
=======
  nacinema_network:
    driver: bridgea
>>>>>>> bd97d2dcd87743cb25cac9522dd215e630b37313

