version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: minicinema_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: minicinema123
      MONGO_INITDB_DATABASE: movie
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - minicinema_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: minicinema_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - minicinema_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: minicinema_app
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:minicinema123@mongo:27017/movie?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=5000
    volumes:
      - ./uploads:/app/uploads:rw
      - app_logs:/app/logs
    networks:
      - minicinema_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: minicinema_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - minicinema_network

volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local

networks:
  minicinema_network:
    driver: bridge
